{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"resultStudies": {
		"scope": "javascript",
		"prefix": "rst",
		"description": "meus resultados dos estudos com console.log",
		"body": [
			"/*results",
			"$1",
			"*/"
		]
	},
	"SAP-Model-Read": {
		"prefix": "saprm",
		"scope": "javascript",
		"description": "Cria um read para o model",
		"body": [
			"oModel.read('/${1/(.*)/${1:/capitalize}/}',dados)",
			"  urlParams: {",
			"    '$2':'$3',",
			"    }",
			"    success: {",
			"    $5",
			"",
			"    }.bind(this),",
			"    error: (error){",
			"		 console.log('error', error);",
			"      $4",
			"    }.bind(this)",
			"});",
		]
	},
	"SAP-Promise": {
		"prefix": "sappromise",
		"scope": "javascript",
		"description": "Cria uma promise para um metodo da oModel",
		"body": [
			"validarLoteNovo: async function(oModelCab, loteInseridoTela){",
			"	return new Promise((resolve, reject)=> {",
			"		let dados = {",
			"			campo1: valor1,",
			"			campo2: valor2",
			"      }",
			"		let msg_erro = '';",
			"		let oModel = this.getView().getModel();",
			"		let sUrl = '/PickingItem';",
			"		oModel.read(sUrl , dados) {",
			"			async: true,",
			"			success: function (oData) {",
			"				",
			"				if (Array.isArray(oData.results) && oData.results.length > 0) {",
			"					// Validar se lote utilizado em outro Picking",
			"					let ls_existe_outro_transp = oData.results.find((record) => record.Ticket != oModelCab.oData.ticket && record.Lote === loteInseridoTela)",
			"					if (!!ls_existe_outro_transp) {",
			"						// Erro: Lote inserido é usado em outro Picking",
			"						msg_erro = 'Lote utilizado em outra remessa';",
			"						resolve(msg_erro);",
			"					}",
			"",
			"					// Validar se lote já é utilizado",
			"					let ls_lote_ja_usado = oData.results.find((record) => record.Lote === loteInseridoTela)",
			"					if (!!ls_lote_ja_usado) {",
			"						// Erro: Lote inserido é usado em outro Picking",
			"						msg_erro = 'Lote já foi inserido neste picking';",
			"						resolve(msg_erro);",
			"					}",
			"					resolve();",
			"				} else {",
			"					msg_erro = 'Erro técnico ao ler lote novo no SAP';",
			"					resolve(msg_erro);",
			"				}",
			"",
			"			}.bind(this),",
			"			error: function (oError ) {",
			"				msg_erro = 'Erro técnico ao ler lote novo no SAP';",
			"				reject(msg_erro);",
			"			}.bind(this)",
			"		});",
			"	});",
			"},"
		]
	},
	"JSBuscarNoArray": {
		"prefix": "sapbuscaarray",
		"scope": "javascript",
		"description": "Cria uma promise para um metodo da oModel",
		"body": [
			"				if (Array.isArray(oData.results) && oData.results.length > 0) {",
			"					// Procurar valor em array",
			"					let ls_existe_outro = oData.results.find((record) => record.Ticket != oModelCab.oData.ticket && record.Lote === loteInseridoTela)",
			"					// se achou valor no array"
			"					if (!!ls_existe_outro) {",
			"						// Erro: erro tal...",
			"						msg_erro = 'erro tal';",
			"					}",
			"",
			"					// Validar se lote já é utilizado",
			"					let ls_lote_ja_usado = oData.results.find((record) => record.Lote === loteInseridoTela)",
			"					if (!!ls_lote_ja_usado) {",
			"						// Erro: outro erro aqui...",
			"						msg_erro = 'Outro erro aqui...';",
			"					}",
			"				} else {",
			"					msg_erro = 'Erro técnico ao ler no SAP';",
			"				}",
		]
	},
}
